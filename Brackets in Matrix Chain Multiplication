class Solution{
public:
    string matrixChainOrder(int arr[], int n){
        map<pair<int,int>,string>mpp;
        int dp[n-1][n-1];
        
        for(int i=0,j=0;j<n-1;j++){
            int r=i,c=j, size=n-1-j;
            while(size--){
                if(j==0){
                    dp[r][c]=0;
                    
                    string str ="";
                    char ch ='A' + (n-1-size-1);
                    str =str+ch;
                    mpp[make_pair(r,c)] = str;
                    r++, c++;
                }
                else if(j==1)
                {
                    dp[r][c]=arr[r]*arr[c]*arr[c+1];
                    mpp[make_pair(r,c)] = '(' + mpp[make_pair(r,c-1)] + mpp[make_pair(r+1,c)] +')';
                    r++,c++;
                    
                }
                else {
                    int right, down;
                    dp[r][c]= INT_MAX;
                    for(right =r,down=r+1;right<=c && down <=c;right++, down++){
                        int oper =dp[r][right] + dp[down][c] + arr[r]*arr[down]*arr[c+1];
                        if(dp[r][c] > oper){
                            dp[r][c] =oper;
                            mpp[make_pair(r,c)] = '(' + mpp[make_pair(r,right)] + mpp[make_pair(down,c)] + ')';
                            
                        }
                    }
                    r++,c++;
                }
            }
        }
        return mpp[make_pair(0,n-2)];
    }
