{
  public:
    vector<int> findOrder(int n, int m, vector<vector<int>> prerequisites) 
    {
       vector<int>indegree(n,0);
       vector<int>adj[n];
       int cnt=0;
       vector<int>ans;
       for(auto it: prerequisites ){
           adj[it[1]].push_back(it[0]);
           indegree[it[0]]++;
       }
       
       queue<int>q;
       
       
       for(int i=0;i<n;i++){
           if(indegree[i] == 0) {
               q.push(i);
               cnt++;
           }
           
        }
            
            
            
            while(!q.empty()){
                int node = q.front();
                
                  q.pop();
                  ans.push_back(node);
                
                for(auto it: adj[node]){
                    indegree[it]--;
                    if(indegree[it] == 0){
                        q.push(it);
                        cnt++;
                        
                    } 
                }
            }
            if(cnt !=n){
                vector<int>dummy;
               return dummy;
            }
            
            
           
            
    return ans;
       
           
       
    }
