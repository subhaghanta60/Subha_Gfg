 private:
    int lcs(string str, string s, int n, int m, vector<vector<int>>&dp){
        if(n==0 || m==0){
            return 0;
        }
        if(dp[n][m] !=-1){
            return dp[n][m];
        }
        if(str[n-1] == s[m-1]){
            return dp[n][m] = 1+lcs(str, s, n-1,m-1,dp);
        }
        else {
            return dp[n][m] = max(lcs(str, s, n-1,m,dp), lcs(str, s, n,m-1, dp));
        }
    }
  public:
    int countMin(string str){
        string s=str;
        reverse(s.begin(), s.end());
        int n=str.size();
        int m=n;
        vector<vector<int>>dp(n+1, vector<int>(m+1, -1));
        
        return n- lcs(str, s,n,m,dp);
    
    }
