public:
    bool gridSum(vector<vector<int>> &grid, int k){
        int n=grid.size();
        int m=grid[0].size();
        int dp1[n+1][m+1];
        int dp2[n+1][m+1];
        
        
        dp1[n-1][m-1] = dp2[n-1][m-1] = grid[n-1][m-1];
        
        for(int i=n-2;i>=0;i--){
            dp1[i][m-1] = dp1[i+1][m-1] + grid[i][m-1];
            dp2[i][m-1] = dp2[i+1][m-1] + grid[i][m-1];
        }
        
        for(int i=m-2;i>=0;i--){
            dp1[n-1][i] = dp1[n-1][i+1] + grid[n-1][i];
            dp2[n-1][i] = dp2[n-1][i+1] + grid[n-1][i];
        }
        
        for(int i=n-2;i>=0;i--){
            for(int j=m-2;j>=0;j--){
                dp1[i][j] = min(dp1[i+1][j], dp1[i][j+1]) + grid[i][j];
                dp2[i][j] = max(dp2[i+1][j], dp2[i][j+1]) + grid[i][j];
            }
        }
        
        if(abs(k)%2 == (n+m)%2) return false;
        
        else if (dp1[0][0] <=k && dp2[0][0] >= k) return true;
        
        return false;
        
        
        
        
    }
